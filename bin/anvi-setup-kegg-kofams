#!/usr/bin/env python
# -*- coding: utf-8

import sys

import anvio
import anvio.kegg as kegg

from anvio.errors import ConfigError, FilesNPathsError
from anvio.terminal import time_program

__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2020, the Meren Lab (http://merenlab.org/)"
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__authors__ = ['ivagljiva']
__provides__ = ["kegg-data", "modules-db"]
__description__ = "Download and setup KEGG KOfam HMM profiles and KEGG MODULE data"

@time_program
def main(args):
    setup = kegg.KeggSetup(args)
    setup.setup_data()

if __name__ == '__main__':
    from anvio.argparse import ArgumentParser

    parser = ArgumentParser(description=__description__)
    groupI = parser.add_argument_group('KEGG DATA SETUP', "This program will set up metabolism "
                                       "data from the KEGG resource of databases. Note that if you provide no "
                                       "parameters at all, this program will download the snapshot of KEGG "
                                       "that is associated with the latest release of anvi'o.")
    groupI.add_argument(*anvio.A('kegg-data-dir'), **anvio.K('kegg-data-dir'))
    groupI.add_argument(*anvio.A('kegg-archive'), **anvio.K('kegg-archive'))
    groupI.add_argument(*anvio.A('download-from-kegg'), **anvio.K('download-from-kegg'))
    groupI.add_argument(*anvio.A('kegg-snapshot'), **anvio.K('kegg-snapshot'))

    groupE = parser.add_argument_group('EXTRAS', "Extras for the extra.")
    groupE.add_argument(*anvio.A('reset'), **anvio.K('reset'))
    groupE.add_argument(*anvio.A('just-do-it'), **anvio.K('just-do-it'))

    args = parser.get_args(parser)

    try:
        main(args)

    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-1)
