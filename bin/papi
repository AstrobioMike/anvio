#!/usr/bin/env python
# -*- coding: utf-8

# Copyright (C) 2014, A. Murat Eren
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Please read the COPYING file.

import os
import sys
import PaPi.profiler
from PaPi.utils import ConfigError

if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(description='Main entry point for Post-Assembly Metagenomics Pipeline')
    parser.add_argument('-i', '--input_file', metavar = 'PATH', default = None,
                        help = 'Sorted and indexed BAM file to analyze')
    parser.add_argument('-d', '--profile', default = None, metavar = 'PATH',
                        help = 'Serialized profile. When declared, the profiling step\
                                will be skipped and the serialized profile will be\
                                loaded')
    parser.add_argument('-o', '--output-directory', default = None,
                        help = 'The directory for output files to be stored.')
    parser.add_argument('--list-contigs', action = 'store_true', default = False,
                        help = 'When declared, lists contigs in the BAM file and\
                                exits without any further analysis.')
    parser.add_argument('-M', '--min-contig-length', default = 10000, type=int,
                        help = 'Minimum length of contigs in a BAM file to analyze. The\
                                minimum length should be long enough for tetranucleotide\
                                frequency analysis to be meaningful. The default is\
                                %(default)d, and we advise to never go below 5,000.')
    parser.add_argument('-C', '--min-mean-coverage', default = 5, type=int,
                        help = 'Minimum mean coverage for contigs to be kept in the\
                                analysis.')
    parser.add_argument('--contigs', default = None,
                        help = 'It is possible to analyze only a group of contigs from\
                                a given BAM file. Contigs of interest can be specified\
                                using a comma separated list, or in a text file where\
                                each line contains a contig name.')
    

    args = parser.parse_args()

    try:
        profiler = PaPi.profiler.BAMProfiler(args)
        profiler.run()
    except ConfigError, e:
        print e
        sys.exit(-1)

    #profiler.generate_column_entropy_profile()
    #profiler.generate_report()
