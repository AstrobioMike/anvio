#!/usr/bin/env python
# -*- coding: utf-8
"""Takes a merged PROFILE.db, and sends the data to CONCOCT for unsupervised clustering."""

import sys

import anvio.dbops as dbops
import anvio.terminal as terminal

from anvio.errors import ConfigError, FilesNPathsError


__author__ = "Christopher Quince"
__copyright__ = "Copyright 2015, The anvio Project"
__credits__ = ["A. Murat Eren"]
__license__ = "GPL 3.0"
__version__ = "1.0.0"
__maintainer__ = "A. Murat Eren"
__email__ = "a.murat.eren@gmail.com"
__status__ = "Development"


run = terminal.Run()
progress = terminal.Progress()


class CONCOCT(dbops.DatabasesMetaclass):
    def __init__(self, args = None, r = run, p = progress):
        self.run = r
        self.concoct_clusters = {}

        self.debug = False
        self.profile_db_path = None
        self.annotation_db_path = None
        self.output_directory = None

        self.run = r
        self.progress = p

        profile_db = dbops.ProfileDatabase(args.profile_db)
        self.coverages = profile_db.db.get_table_as_dict('mean_coverage_contigs', columns_of_interest = profile_db.samples)
        profile_db.disconnect()

        annotation_db = dbops.AnnotationDatabase(args.annotation_db)
        self.kmers = annotation_db.db.get_table_as_dict('kmer_contigs', keys_of_interest = self.coverages.keys())
        annotation_db.disconnect()

        #import cPickle
        #cPickle.dump(self.coverages, open('coverages.cPickle', 'w'))
        #cPickle.dump(self.kmers, open('kmers.cPickle', 'w'))

    def cluster(self):
        # we have our split sequences here:
        self.split_sequences
        self.coverages
        pass


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(description="A script to call CONCOCT clustering on a merged anvi'o profile")
    parser.add_argument('-p', '--profile-db', metavar = "PROFILE_DB", required = True,
                        help = 'Profile database.')
    parser.add_argument('-a', '--annotation-db', required = True, metavar = 'ANNOTATION_DB',
                        help = 'anvio annotation database.')
    args = parser.parse_args()

    try:
        c = CONCOCT(args)
    except ConfigError, e:
        print e
        sys.exit(-1)
    except FilesNPathsError, e:
        print e
        sys.exit(-2)
