#!/usr/bin/env python
# -*- coding: utf-8

import os
import sys
import json
import yaml
import anvio
import subprocess
import anvio.utils as utils
import anvio.terminal as terminal
import anvio.batchwork as batchwork
import anvio.filesnpaths as filesnpaths
from anvio.terminal import time_program
from anvio.argparse import ArgumentParser
from anvio.errors import ConfigError, FilesNPathsError

__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2018, the Meren Lab (http://merenlab.org/)"
__credits__ = []
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__authors__ = ['metehan']
__requires__ = ['yaml']
__description__ = (
    "The purpose of this program is to download the data in the Yaml type file received from the user and run the desired commands.")

@terminal.time_program
def main(args):
    batchwork.AnvioBatchWork(args).execute()

if __name__ == '__main__':
    """ This is the main function that is called when the program is run from the command line. """

    parser = ArgumentParser(description=__description__)
    parser.add_argument(*anvio.A('yaml'), **anvio.K('yaml'))
    parser.add_argument(*anvio.A('output-dir'), **anvio.K('output-dir', {"help": "If you declare an output dir, all your data will be "
                            "stored in there, instead of being stored in a temporary directory to be deleted once the tests are done. "
                            "This is particularly useful if you wish to play with general anvi'o output files"}), required=False)    
    parser.add_argument(*anvio.A('reset'), **anvio.K('reset'))
    
    args = parser.get_args(parser, auto_fill_anvio_dbs=True)

    try:
        main(args)
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-2)
