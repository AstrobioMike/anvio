#!/usr/bin/env python
# -*- coding: utf-8

import sys
import json
import anvio
import subprocess
import anvio.terminal as terminal
import anvio.filesnpaths as filesnpaths
from anvio.argparse import ArgumentParser
from anvio.errors import ConfigError, FilesNPathsError


__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2018, the Meren Lab (http://merenlab.org/)"
__credits__ = []
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__authors__ = ['meren', 'metehan']
__requires__ = ['contigs-db', 'profile-db']
__description__ = ("The purpose of this program is to download the data in the JSON type file received from the user and run the desired commands.")

run = terminal.Run()
progress = terminal.Progress()

@terminal.time_program
def main(args):
    """ This function is get json file as argument and parse it. Then run the given commands. """
    given_json_path = lambda x: args.__dict__[x] if x in args.__dict__ else None
    json_file_path = given_json_path('json')

    if not json_file_path:
        raise ConfigError("You must provide a JSON file path.")
    filesnpaths.is_file_json_formatted(json_file_path)

    # Parse the command and execute it.

    with open(json_file_path, 'r') as json_file:
        json_data = json.load(json_file)
 
    try:
        command = json_data.get('data').get('command')
        arg = json_data.get('data').get('args')
        command_run = command + ' ' + arg[0] + ' ' + arg[1]
        run.info('Running the command given in json file:', command_run)
        subprocess.call(command_run, shell=True)    
    except:
        raise ConfigError("The JSON file is not in the correct format.")

if __name__ == '__main__': 
    """ This is the main function that is called when the program is run from the command line. """

    parser = ArgumentParser(description=__description__)
    parser.add_argument('-j', '--json', help='JSON file containing the commands to be run', required=True)

    args = parser.get_args(parser)

    try:
        main(args)
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-2)